{"tagline":"Google Analytics Server Side Tracking (PHP)","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Google Analytics Server Side","google":"UA-33383621-1","body":"Google Analytics Server Side\r\n============================\r\n\r\nGoogle Analytics Server Side is an implementation of the \r\n[Google Analytics Web Tracking ECMAScript][1] in [PHP][2].  \r\nIt implements parts of the interface that would be available without ECMAScript in a \r\nBrowser.\r\n\r\nCODE: `git clone git://github.com/chappy84/google-analytics-server-side.git`  \r\nHOME: <http://github.com/chappy84/google-analytics-server-side>  \r\nBUGS: <http://github.com/chappy84/google-analytics-server-side/issues>  \r\n\r\nGoogle Analytics was developed by [Google][3].  \r\nThis PHP adaptation is maintained by [Tom Chapman][4].  \r\n\r\n[1]: https://developers.google.com/analytics/devguides/collection/gajs/\r\n[2]: http://www.php.net/\r\n[3]: http://www.google.com/analytics\r\n[4]: http://tom-chapman.co.uk/\r\n\r\nBuild Status\r\n------------\r\n\r\nMaster: [![Build Status](https://secure.travis-ci.org/chappy84/google-analytics-server-side.png?branch=master)](http://travis-ci.org/chappy84/google-analytics-server-side)  \r\nDevelopment: [![Build Status](https://secure.travis-ci.org/chappy84/google-analytics-server-side.png?branch=development)](http://travis-ci.org/chappy84/google-analytics-server-side)\r\n\r\nUsage\r\n-----\r\n\r\nGoogle Analytics Server Side can be used simply in the following manner:\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide();\r\n$gass->setAccount('UA-XXXXXXX-X')\r\n     ->trackPageView();\r\n```\r\n\r\nThe class constructor accepts an optional associative array parameter of available\r\nconfiguration options. Basically if there's a public method to set the variable\r\nthen it can be passed as part of the array to the class.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide();\r\n$gass->setAccount('UA-XXXXXXX-X')\r\n     ->setBotInfo(true);\r\n```\r\n\r\ncould also be done like this:\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide(array('account'\t=> 'UA-XXXXXXX-X',\r\n    \t\t\t\t\t\t\t\t\t\t'botInfo'\t=> true));\r\n```\r\n\r\nThese options can also be set individually by the method setOption,\r\nor in one go with the method setOptions\r\n\r\nMost of the [current basic methods][5] available in ga.js tracking code have been \r\nimplemented.  \r\nThe methods implemented are:\r\n\r\n- deleteCustomVar\r\n- getAccount\r\n- getVersion\r\n- getVisitorCustomVar\r\n- setAccount\r\n- setCustomVar\r\n- setSessionCookieTimeout\r\n- setVisitorCookieTimeout\r\n- trackPageview\r\n\r\nThe methods not implemented yet are:\r\n\r\n- getName\r\n- setSampleRate\r\n- setSiteSpeedSampleRate\r\n\r\nExtra methods are also available for the information which would normally be \r\npre-determined in the javascript or http request object from the browser. The User Agent, \r\nServer Name, Remote Address, Document Path, Document Referer, Google Analytics Version, \r\nAccepted Language, Cookies and Search Engines are all set automatically without any method \r\ncalls being required by the developer. However, the following methods are available to set \r\nthese variables and should be called before the trackPageView / trackEvent method to save \r\nthe tracking information:\r\n\r\n- setVersion\r\n- setAcceptLanguage\r\n- setUserAgent\r\n- setServerName\r\n- setRemoteAddress\r\n- setDocumentPath\r\n- setDocumentReferer\r\n- setCookies\r\n\r\nOn top of this there are also set methods to alter the default values for the the page \r\ntitle and document character set.  \r\nThese are available via the following methods:\r\n\r\n- setPageTitle\r\n- setCharset\r\n\r\nGet methods are also provided for all of the above.  \r\nAll methods but get methods allow chaining for ease of use.\r\n\r\n### Event Tracking\r\n\r\nEvent tracking is implemented using the [same functionality as in the ga.js tracking code][6]\r\n\r\n```php\r\n$gass->trackEvent('Category',                             // string\r\n                  'Action',                               // string\r\n                  'Label',                                // string [optional]\r\n                  Value,                                  // integer [optional]\r\n                  nonInteraction);                        // boolean [optional]\r\n```\r\n\r\nN.B. trackEvent() does not require trackPageView() to be called first.  \r\nHowever if you do not call trackPageView first or set nonInteraction to true then your \r\npages/visit metric may become less than 1.\r\n\r\n[5]: https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration\r\n[6]: https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiEventTracking\r\n\r\nBotInfo\r\n-------\r\n\r\nYou must enable botInfo for it to ignore any search/trawler bots.  \r\nTo do this you need to pass one of true, and associative array or an instance of the \r\nadapter you want to use into the class.  The code will default to the BrowsCap adapter. \r\nSetting this to true will use the default. If you pass an associative array, this will be \r\npassed to BotInfo and through to the Adapter. When providing an associative array you can \r\nalso pass the element 'adapter' which will tell BotInfo which class to use as the Adapter. \r\nYou can also pass an instance of a GASS\\BotInfo Adapter which will be used by the \r\nGASS\\BotInfo Class.\r\n\r\n### Adapters\r\n\r\nThere are two adapters available in the GASS framework\r\n\r\n#### BrowsCap\r\nThere is one optional option as part of the array configuration parameter. \r\n\r\n- browscap: This is the same as the php ini setting [browscap][7], a file-system location \r\nwhere the [php_browscap.ini file][8] is located / can be downloaded to.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide(array('botInfo' \t=> true,\r\n    \t\t\t\t\t\t\t\t\t\t'account'\t=> 'UA-XXXXXXX-X'));\r\n```\r\n\r\nor\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide(array('botInfo' \t=> array(\t'adapter' => 'BrowsCap',\r\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'browscap'=> '/tmp/php_browscap.ini'),\r\n    \t\t\t\t\t\t\t\t\t\t'account'\t=> 'UA-XXXXXXX-X'));\r\n```\r\n\r\nor\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide(array('account'\t=> 'UA-XXXXXXX-X'))\r\n$browsCapAdapter = new \\GASS\\BotInfo\\BrowsCap;\r\n$gass->setBotInfo($browsCapAdapter);\r\n```\r\n\r\nWhen an update for the browscap ini file is available [on the server][8] the code will \r\nautomatically download the file into the location provided.\r\n\r\nN/B: You MUST either provide the browscap setting or have it set in php.ini, otherwise \r\nthis adapter will not work.\r\n\r\nN/B2: Due to an issue with the browscap ini file only being loaded when PHP starts up \r\n(which is with the web-server apache, PHP-FPM etc.) the code deals with the ini file \r\nitself, rather than using the built in get_browser function. This ensures the auto-update \r\nfunctionality will work without the need to restart the web-server.\r\n\r\n#### UserAgentStringInfo\r\nThis was the previous default for Google Analytics Server Side which downloads a csv list \r\nof search engine crawlers from [user-agent-string.info][9].  \r\nThere are three options as part of the array configuration parameter:\r\n\r\n- cachePath: where to save the list of bots downloaded from user-agent-string.info (required)\r\n- cacheFilename: the filename to save the list of bots to (optional, defaults to bots.csv)\r\n- cacheLifetime: number of secods before the cache expires (optional, defaults to 2592000 (30 days))\r\n\r\nThis can be implemented in the same way as the BrowsCap adapter.\r\n\r\n[7]: http://www.php.net/manual/en/misc.configuration.php#ini.browscap\r\n[8]: http://tempdownloads.browserscap.com/ \r\n[9]: http://user-agent-string.info/download\r\n\r\nHttp\r\n----\r\n\r\nThis is a singleton class which provides http functionality across all sections of the \r\nGASS framework.  \r\nThis will default to using the Curl adapter if it's available otherwise it'll fall back \r\nto the Stream adapter. It requires no options. All options should be passed as a \r\nconfiguration option to GoogleAnalyticsServerSide either via the configuration parameter \r\nin the 'http' element or via the setHttp parameter. This can either be an associative \r\narray or an instance of the required adapter.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new GoogleAnalyticsServerSide(array('account'\t=> 'UA-XXXXXXX-X',\r\n    \t\t\t\t\t\t\t\t\t\t'http'\t\t=> array(\t'adapter'\t\t=> 'Curl',\r\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCURLOPT_PROXY\t=> 'http://exampleproxy.local:8080'));\r\n```\r\n\r\nor\r\n\r\n```php\r\n$httpAdapter = new \\GASS\\Http\\Stream();\r\n$gass = new GoogleAnalyticsServerSide(array('account'\t=> 'UA-XXXXXXX-X'));\r\n$gass->setHttp($httpAdapter);\r\n```\r\n\r\n### Adapters\r\n\r\nThere are two Adapters available to GASS\\Http, these are:\r\n\r\n#### Stream\r\nStream creates a stream context and utilises this stream with file_get_contents. See \r\n[php's example][10]. Any options provided to this class will go into the 'http' array for \r\nthe stream context, thus you may pass any headers or proxy information etc. into this to \r\nuse in the connection when made.\r\n\r\n#### Curl\r\nThis utilises the php extension cURL. cURL is recommended, however as it's not always \r\navailable the code defaults to stream to allow all servers make http requests in the \r\ncorrect way.  \r\nAny options provided to this class must be passed using the [curl constants][11] as \r\nidentifiers (associative array keys or option names).\r\n\r\n[10]: http://www.php.net/file_get_contents#example-2118\r\n[11]: http://www.php.net/manual/en/function.curl-setopt.php#refsect1-function.curl-setopt-parameters\r\n\r\nLocation\r\n--------\r\n\r\nThe Location will be reported as the location of the server if you use the GA Account \r\nnumber in the format UA-XXXXXXX-X as provided by Google. If you alter this to the format \r\nMO-XXXXXXX-X then the location will be tracked correctly and appear on the location map as \r\nit does with the normal ECMAScript tracking.\r\n\r\nCookies\r\n-------\r\n\r\nCookies are automatically set when either trackPageView or trackEvent are called.  \r\nThey are however only sent as headers to the browser once, thus if you call either \r\nfunction more than once, or call both functions, then they will only be included in the \r\nheaders when the first call is made.\r\n\r\nYou do have the option to turn off the sending of the cookie headers to the browser which \r\ncan be done by calling disableCookieHeaders before calling trackPageView / trackEvent for \r\nthe first time.\r\n\r\nPHP Version\r\n-----------\r\n\r\nThe Bad News: This project is now a PHP 5.3+ project. PHP themselves no longer support \r\nPHP 5.2 as of August 2011 and with PHP 5.4 now available it's time we left 5.2 behind \r\n(sorry to all those on shared hosting stuck with it).  \r\n   \r\nThe Good News: I have however left a [PHP 5.2 Branch][12] which you can feel free to use, \r\nfork etc.. I will try to fix any issues which arise in this branch. Please notify me of \r\nany issues via the bugs link at the top of this readme, or via a pull request from your \r\nfork if you've attempted a fix yourself.\r\n\r\n[12]: https://github.com/chappy84/google-analytics-server-side/tree/php-5.2\r\n\r\nQuick Note on External Frameworks\r\n---------------------------------\r\n\r\nYou may be wondering why this framework doesn't use an external framework (such as Zend \r\nFramework, Symfony etc.) for certain sections of this (Http, Validators etc.).  It was \r\ndecided not to rely on any external sources, mainly for maintenance reasons (there's \r\nenough for the GA code), but also so that developers could use this code with minimal \r\nsetup and without having to download any other code from other locations.\r\n\r\nLICENSE\r\n-------\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nGoogle Analytics Server Side is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation; either version 3 of the License, or any later\r\nversion.\r\n\r\nThe GNU General Public License can be found at  \r\nhttp://www.gnu.org/copyleft/gpl.html.\r\n\r\nN/B: This code is nether written or endorsed by Google or any of it's employees.  \r\n\"Google\" and \"Google Analytics\" are trademarks of Google Inc. and it's respective subsidiaries.\r\n"}